--- a/ai/ai_chat.go
@@ -17,6 +17,7 @@ type AIName string

 const (
        Deepseek    = "deepseek"
+       Siliconflow = "siliconflow"
 )

 func NewAIAgent() *AIAgent {
@@ -31,7 +32,9 @@ func NewAIAgent() *AIAgent {
        case Deepseek:
                agent = AIAgent{AiChat: &DeepSeek{}}
                break
-
+       case Siliconflow:
+               agent = AIAgent{AiChat: &SiliconFlow{}}
+               break
        default:
                cobra.CheckErr("AI configuration is missing or incorrect.")
        }
--- a/ai/deepseek.go
@@ -14,11 +14,11 @@ type DeepSeek struct {
 }

 func (ds *DeepSeek) Chat(ctx, prompt string) (string, error) {
-       resp := Send(ctx, prompt)
+       resp := dsSend(ctx, prompt)
        return resp, nil
 }

-func Send(ctx, prompt string) string {
+func dsSend(ctx, prompt string) string {

        aiConfig := config.GlobalConfig.Ai
        url := aiConfig.BaseUrl
@@ -98,7 +98,7 @@ func Send(ctx, prompt string) string {
                cobra.CheckErr(fmt.Sprintf("request error: %v", errorData))
        }

-       dsResp := &DeepSeekResponse{}
+       dsResp := &CommonResponse{}
        if err := mapstructure.Decode(result, &dsResp); err != nil {
                cobra.CheckErr(err)
        }
--- a/ai/deepseek_test.go
@@ -1,8 +1,17 @@
 package ai

-import "testing"
+import (
+       "fmt"
+       "github.com/yesAnd92/lwe/config"
+       "testing"
+)

 func TestDeepSeek_Chat(t *testing.T) {
+       config.InitConfig()
        ds := &DeepSeek{}
-       ds.Chat("hh", "") // 添加第二个参数为空字符串以满足函数签名要求
+       chat, err := ds.Chat("hello,deepseek", "")
+       if err != nil {
+               fmt.Println(err)
+       }
+       fmt.Println(chat)
 }
